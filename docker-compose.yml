services:
  # PostgreSQL database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-moodyuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-moodypassword}
      POSTGRES_DB: ${POSTGRES_DB:-moodyblues}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-moodyuser} -d ${POSTGRES_DB:-moodyblues}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Ollama service for local LLM
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: all
    #           capabilities: [gpu]

  # MinIO service (S3-compatible storage for local development)
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000" # API port
      - "9001:9001" # Console port
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Creates default bucket in MinIO on startup
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER:-minioadmin} ${MINIO_ROOT_PASSWORD:-minioadmin};
      /usr/bin/mc mb myminio/${S3_BUCKET_NAME:-moodyblues};
      /usr/bin/mc anonymous set public myminio/${S3_BUCKET_NAME:-moodyblues};
      exit 0;
      "

  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER:-moodyuser}:${POSTGRES_PASSWORD:-moodypassword}@postgres:5432/${POSTGRES_DB:-moodyblues}
      - OLLAMA_BASE_URL=http://ollama:11434
      - NODE_ENV=${NODE_ENV:-development}
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - DISCORD_HELP_CHANNEL_ID=${DISCORD_HELP_CHANNEL_ID}
      - DISCORD_GUILD_ID=${DISCORD_GUILD_ID}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama3}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_REPO=${GITHUB_REPO}
      - GITHUB_OWNER=${GITHUB_OWNER}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-minioadmin}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-minioadmin}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME:-moodyblues}
      - S3_ENDPOINT=${S3_ENDPOINT:-http://minio:9000}
      - USE_MINIO=${USE_MINIO:-true}
      - OPEN_SOURCE_PROJECT_URL=${OPEN_SOURCE_PROJECT_URL}
      - MAINTAINER_DISCORD_ID=${MAINTAINER_DISCORD_ID}
      - API_PORT=${API_PORT:-3000}
      - API_HOST=${API_HOST:-0.0.0.0}
    ports:
      - "${API_PORT:-3000}:${API_PORT:-3000}"
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_started
      minio:
        condition: service_started
      createbuckets:
        condition: service_completed_successfully
    volumes:
      - ./temp:/app/temp
      - ./src:/app/src # For development hot-reloading
    restart: unless-stopped

volumes:
  postgres_data:
  ollama_data:
  minio_data:
